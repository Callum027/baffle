###
# Helper definitions for the main language constructs.
###


name = r"[A-Za-z][A-Za-z0-9-_]*" # TODO: allow non-alphanumerical names
unique_name = name

packet_attr_name = "ipv4" | "ipv6" | "ipv4_subnet" | "ipv6_subnet" | ...
packet_attr_value = ipv4 | ipv6 | ipv4_subnet | ipv6_subnet | ...

protocol = (("tcp"|"udp"), port_num) |
           ("arp") |
           ...


###
# Main language constructs.
###


statement = alias | group | entity | service | policy


alias = "alias", unique_name, packet_attr_name, packet_attr_value


# group | name of the group | member 1 | [member 2...]
group = "group", member_type, unique_name, unique_name, [{unique_name}]
member_type = "alias" | "entity" | "service" | "policy"


entity = "entity", unique_name, (entity_attr_name, entity_attr_value)
                                ("service", unique_name) # "service" is not strictly required here,
                                                         # but for other entity attributes, the type is
                                                         # defined, so this is for consistency's sake.
# Subset of packet_attr, which only contains specific attributes defined in an entity.
entity_attr_name = "ipv4" | "ipv6" | ...
entity_attr_value = ipv4 | ipv6 | ...

                                                          
service = "service", unique_name, protocol, [{"and", protocol}]


# N.B. A lot of information can be inferred from this in the code
# subject ~= source
# object ~= destination
# For example, whether it's a source address/port we're supposed to be looking at
# in the policy.
policy = "policy", unique_name, policy_action
                   
policy_action = ("allow",  subject, object, app) |
                ("deny",   subject, object, app) |
                ("mirror", subject, object, app, mirror_dest) |
                ("mirror_rewrite", ...) | # TODO: talk with Ian
                ...

subject/object = (
                     unique_name | # alias/entity/group (alias or entity)
                     (packet_attr_name, packet_attr_value)
                 ), [("and"|"or"), subject/object]

app = (
          unique_name | # service/service group
          protocol
      ), [("and"|"or"), app]